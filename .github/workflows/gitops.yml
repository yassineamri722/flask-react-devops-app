name: CI/CD Pipeline - Sonar → Build → Scan → Push → GitOps

on:
  push:
    branches: [ master, dev ]
  pull_request:

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  # ---------------- SonarCloud ----------------
  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # ---------------- Build, Scan & Push ----------------
  build-scan:
    name: Build, Scan & Push (${{ matrix.service }})
    runs-on: ubuntu-24.04
    needs: sonar
    strategy:
      matrix:
        service: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:buildcache,mode=max

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: "docker.io/${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }}"
          format: table
          exit-code: 0
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

      # ---------------- Update Helm values ----------------
      - name: Update Helm values.yaml
        run: |
          sed -i "s|tag:.*|tag: ${{ github.sha }}|" charts/${{ matrix.service }}/values.yaml

      - name: Commit Helm changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add charts/${{ matrix.service }}/values.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push origin ${{ github.ref_name }}
